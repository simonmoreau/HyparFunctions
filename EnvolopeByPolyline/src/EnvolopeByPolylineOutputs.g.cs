// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace EnvolopeByPolyline
{
    public class EnvolopeByPolylineOutputs: ResultsBase
    {
		/// <summary>
		/// The surface of façade
		/// </summary>
		[JsonProperty("Façade Area")]
		public double FaadeArea {get;}

		/// <summary>
		/// The roof surface
		/// </summary>
		[JsonProperty("Roof Area")]
		public double RoofArea {get;}



        /// <summary>
        /// Construct a EnvolopeByPolylineOutputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public EnvolopeByPolylineOutputs() : base()
        {

        }


        /// <summary>
        /// Construct a EnvolopeByPolylineOutputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public EnvolopeByPolylineOutputs(double faadeArea, double roofArea): base()
        {
			this.FaadeArea = faadeArea;
			this.RoofArea = roofArea;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}